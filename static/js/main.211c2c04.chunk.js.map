{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","removeArr","filter","todoId","newValue","prev","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.211c2c04.chunk.js","sourcesContent":["import React, { useState,useEffect,useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input,setInput] = useState(props.edit ? props.edit.value:'');\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n    const handleChange = e =>{\r\n        setInput(e.target.value);\r\n    };\r\n    const handleSubmit = e =>{\r\n     e.preventDefault();\r\n       props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n         text: input\r\n         });\r\n       setInput('');\r\n     \r\n    };\r\n      \r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n                <>\r\n                 < input placeholder=\"Ajouter Tache\"\r\n           value={input}\r\n           name=\"text\"\r\n           onChange={handleChange}\r\n           className=\"todo-input\"\r\n           ref={inputRef}\r\n           />   \r\n        <button className=\"todo-button\">Modifier</button>\r\n            </>\r\n            ) : (\r\n                <>\r\n                 < input placeholder=\"Modifier Tache\"\r\n           value={input}\r\n           name=\"text\"\r\n           onChange={handleChange}\r\n           className=\"todo-input\"\r\n           ref={inputRef}\r\n           />   \r\n        <button className=\"todo-button\">Add</button>\r\n        </>\r\n        )\r\n        }\r\n  \r\n        </form>\r\n        \r\n    );\r\n}\r\n\r\nexport default TodoForm\r\n","import React from 'react';\r\nimport {useState}  from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport {RiCloseCircleLine}  from 'react-icons/ri';\r\nimport {TiEdit}  from 'react-icons/ti'\r\nfunction Todo({todos, completeTodo,removeTodo,updateTodo}) {\r\n    const [edit,setEdit] = useState({\r\n     id: null,\r\n     value:''\r\n });  \r\n const submitUpdate = value => {\r\n     updateTodo(edit.id, value)\r\n     setEdit({\r\n         id: null,\r\n     value:''\r\n     })\r\n }\r\n\r\n if(edit.id){\r\n     return <TodoForm edit={edit} onSubmit={submitUpdate}/>\r\n }\r\n   return todos.map((todo,index) => (\r\n        <div\r\n         className={Todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n          key ={index}\r\n          >\r\n            \r\n           <div key={todo.id} onClick={() =>completeTodo(todo.id)}>\r\n               {todo.text}\r\n               </div>\r\n           <div className=\"icons\">\r\n           <RiCloseCircleLine\r\n           onClick={() => removeTodo(todo.id) }\r\n           className=\"delete-icon\"\r\n           /> \r\n           <TiEdit\r\n            onClick={() => setEdit({id: todo.id, value: todo.text}) }\r\n           className=\"edit-icon\"\r\n           /> \r\n           </div>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport {useState}  from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n    const [todos ,setTodos] = useState([]);\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n        const newTodos = [todo, ...todos]\r\n        setTodos(newTodos);\r\n    \r\n    };\r\n\r\n    const updateTodo = (todoId,newValue) => {\r\n   if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n            return;\r\n        }\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    };\r\n    const completeTodo = id =>{\r\n        let updateTodo = todos.map(todo =>{\r\n           if(todo.id === id) {\r\n               todo.isComplete = !todo.isComplete\r\n           }\r\n           return false\r\n        })\r\n        setTodos(updateTodo);\r\n    }\r\n    return (\r\n        <div>\r\n           <h1> What's the Plan for Today</h1>\r\n            <TodoForm onSubmit={addTodo} /> \r\n             <Todo todos={todos} completeTodo={completeTodo} removeTodo= {removeTodo}\r\n             updateTodo = {updateTodo}\r\n              />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import TodoList from './components/TodoList';\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n     <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}